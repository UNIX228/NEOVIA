#include <switch.h>
#include <iostream>
#include "neocore.h"

// NeoCore Standalone Demo Application
// –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ NeoCore Engine –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞

int main(int argc, char* argv[]) {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Å–æ–ª–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
    consoleInit(NULL);
    
    std::cout << "==================================" << std::endl;
    std::cout << "üéÆ NeoCore Graphics Engine v1.0.0" << std::endl;
    std::cout << "   Standalone Demo Application" << std::endl;
    std::cout << "   Author: Unix228" << std::endl;
    std::cout << "==================================" << std::endl;
    std::cout << std::endl;
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è NeoCore
    std::cout << "üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è NeoCore Engine..." << std::endl;
    
    NeoCoreManager neoCore;
    if (!neoCore.initialize()) {
        std::cout << "‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: " << neoCore.getLastError() << std::endl;
        std::cout << "–ù–∞–∂–º–∏—Ç–µ + –¥–ª—è –≤—ã—Ö–æ–¥–∞" << std::endl;
        
        while (appletMainLoop()) {
            hidScanInput();
            u64 kDown = hidKeysDown(CONTROLLER_P1_AUTO);
            
            if (kDown & KEY_PLUS) break;
            
            consoleUpdate(NULL);
        }
        
        consoleExit(NULL);
        return -1;
    }
    
    std::cout << "‚úÖ NeoCore Engine —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!" << std::endl;
    std::cout << "üìä –°—Ç–∞—Ç—É—Å: " << (neoCore.isReady() ? "–ì–æ—Ç–æ–≤" : "–ù–µ –≥–æ—Ç–æ–≤") << std::endl;
    std::cout << "üéØ –í–µ—Ä—Å–∏—è: " << neoCore.getVersion() << std::endl;
    std::cout << "üë§ –ê–≤—Ç–æ—Ä: " << neoCore.getAuthor() << std::endl;
    std::cout << std::endl;
    
    // –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π
    std::cout << "üéÆ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π:" << std::endl;
    std::cout << std::endl;
    
    // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∏–≥—Ä—ã
    GameInfo testGame;
    testGame.gameId = "0100000000000001";
    testGame.gameName = "NeoCore Demo Game";
    testGame.activeMods = {"shadows", "fxaa", "smaa"};
    testGame.hasCustomProfile = false;
    
    std::cout << "üöÄ –ó–∞–ø—É—Å–∫ NeoCore –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–π –∏–≥—Ä—ã..." << std::endl;
    
    if (neoCore.startCore(testGame)) {
        std::cout << "‚úÖ NeoCore —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!" << std::endl;
        std::cout << "üéØ –ò–≥—Ä–∞: " << testGame.gameName << std::endl;
        std::cout << "üÜî ID: " << testGame.gameId << std::endl;
        std::cout << "üîß –ê–∫—Ç–∏–≤–Ω—ã–µ –º–æ–¥—ã: " << testGame.activeMods.size() << std::endl;
        
        for (const auto& mod : testGame.activeMods) {
            std::cout << "   ‚Ä¢ " << mod << std::endl;
        }
    } else {
        std::cout << "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: " << neoCore.getLastError() << std::endl;
    }
    
    std::cout << std::endl;
    std::cout << "üéÆ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª–µ–π:" << std::endl;
    
    // –¢–µ—Å—Ç –º–æ–¥—É–ª–µ–π
    neoCore.enableModule(NeoCoreModule::SHADOWS, true);
    std::cout << "‚úÖ –ú–æ–¥—É–ª—å —Ç–µ–Ω–µ–π –≤–∫–ª—é—á–µ–Ω" << std::endl;
    
    neoCore.enableModule(NeoCoreModule::FXAA, true);
    std::cout << "‚úÖ –ú–æ–¥—É–ª—å FXAA –≤–∫–ª—é—á–µ–Ω" << std::endl;
    
    neoCore.enableModule(NeoCoreModule::OVERLAY, true);
    std::cout << "‚úÖ –ú–æ–¥—É–ª—å Overlay –≤–∫–ª—é—á–µ–Ω" << std::endl;
    
    // –¢–µ—Å—Ç –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤
    std::cout << std::endl;
    std::cout << "‚öôÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤ –∫–∞—á–µ—Å—Ç–≤–∞:" << std::endl;
    
    neoCore.setQualityPriority(QualityPriority::GRAPHICS);
    std::cout << "üé® –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≥—Ä–∞—Ñ–∏–∫–∞" << std::endl;
    
    neoCore.setQualityPriority(QualityPriority::FPS);
    std::cout << "‚ö° –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π FPS" << std::endl;
    
    neoCore.setQualityPriority(QualityPriority::STABILITY);
    std::cout << "‚öñÔ∏è –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: –°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å" << std::endl;
    
    std::cout << std::endl;
    std::cout << "==================================" << std::endl;
    std::cout << "üéØ NeoCore Engine –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!" << std::endl;
    std::cout << "üìÅ –§–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω—ã –≤ /graphics/NeoCore/" << std::endl;
    std::cout << "üìù –õ–æ–≥–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –≤ core_log.txt" << std::endl;
    std::cout << "==================================" << std::endl;
    std::cout << std::endl;
    std::cout << "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:" << std::endl;
    std::cout << "üîÑ A - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å NeoCore" << std::endl;
    std::cout << "‚èπÔ∏è B - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å NeoCore" << std::endl;
    std::cout << "üéÆ X - –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –º–æ–¥—É–ª—å —Ç–µ–Ω–µ–π" << std::endl;
    std::cout << "üîß Y - –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å FXAA" << std::endl;
    std::cout << "‚ûï + - –í—ã—Ö–æ–¥" << std::endl;
    std::cout << std::endl;
    
    bool shadowsEnabled = true;
    bool fxaaEnabled = true;
    
    // –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
    while (appletMainLoop()) {
        hidScanInput();
        u64 kDown = hidKeysDown(CONTROLLER_P1_AUTO);
        
        if (kDown & KEY_PLUS) {
            std::cout << "üëã –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã NeoCore..." << std::endl;
            break;
        }
        
        if (kDown & KEY_A) {
            std::cout << "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ NeoCore..." << std::endl;
            neoCore.stopCore();
            if (neoCore.startCore(testGame)) {
                std::cout << "‚úÖ NeoCore –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω!" << std::endl;
            } else {
                std::cout << "‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞!" << std::endl;
            }
        }
        
        if (kDown & KEY_B) {
            std::cout << "‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ NeoCore..." << std::endl;
            neoCore.stopCore();
            std::cout << "‚úÖ NeoCore –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!" << std::endl;
        }
        
        if (kDown & KEY_X) {
            shadowsEnabled = !shadowsEnabled;
            neoCore.enableModule(NeoCoreModule::SHADOWS, shadowsEnabled);
            std::cout << "üéÆ –¢–µ–Ω–∏: " << (shadowsEnabled ? "–í–∫–ª—é—á–µ–Ω—ã" : "–í—ã–∫–ª—é—á–µ–Ω—ã") << std::endl;
        }
        
        if (kDown & KEY_Y) {
            fxaaEnabled = !fxaaEnabled;
            neoCore.enableModule(NeoCoreModule::FXAA, fxaaEnabled);
            std::cout << "üîß FXAA: " << (fxaaEnabled ? "–í–∫–ª—é—á–µ–Ω" : "–í—ã–∫–ª—é—á–µ–Ω") << std::endl;
        }
        
        consoleUpdate(NULL);
    }
    
    // –û—á–∏—Å—Ç–∫–∞
    neoCore.cleanup();
    std::cout << "üßπ NeoCore –æ—á–∏—â–µ–Ω" << std::endl;
    std::cout << "üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!" << std::endl;
    
    consoleExit(NULL);
    return 0;
}